// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(cuid())
  username String
  email String @unique
  pfp String?
  password String
  birthdate DateTime?
  country String?
  city String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("user")
  UserPage UserPage[]
  Comments Comments[]
  Post Post[]
}

model UserPage{
  id String @id @default(cuid())
  bio String?
  follower Int?
  following Int?
  user User @relation(fields: [userId],references: [id])
  userId String
  @@map("user_page")
}

model Post{
    id String @id @default(cuid())
    likes Int?
    description String?
    user User @relation(fields: [userId],references: [id])
    userId String

    @@map("post")
    Comments Comments[]
    Image Image[]
}

model Image{
    id String @id @default(cuid())
    url String
     post Post @relation(fields: [postId],references: [id])
  postId String
}

model Comments{
  id String @id @default(cuid())
  content String
  user User @relation(fields: [userId],references: [id])
  userId String
  post Post @relation(fields: [postId],references: [id])
  postId String
@@map("comment")
}